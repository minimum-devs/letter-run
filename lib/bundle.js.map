{"version":3,"sources":["webpack:///webpack/bootstrap 12e1c4b2a94b718ef6b2","webpack:///./lib/game.js","webpack:///./lib/tile.js","webpack:///./lib/main.js","webpack:///./lib/game-view.js","webpack:///./lib/board.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACtGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,iCAAiC;AACpD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;ACtBA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;ACPD;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,YAAY;AACpC,0BAA0B,aAAa;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,2CAA2C,kBAAkB;AAC7D;AACA;AACA,0CAA0C;AAC1C,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/FA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC,6CAA6C,yBAAyB;AACtE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC,qBAAqB,yBAAyB;AAC9C,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 12e1c4b2a94b718ef6b2","const Board = require(\"./board\");\nconst Tile = require(\"./tile\");\n\nclass Game {\n\n  constructor() {\n    this.board = new Board();\n    this.points = 0;\n    this.level = 1;\n    // this.dict = this.loadDictionary();\n  }\n\n  loadDictionary() {\n    let dict = [];\n    $.getJSON( \"../word-game/dict/AllWords.txt\", function( txt ) {\n    // Get an array of all the words\n    dict = txt.split( \"\\n\" );\n    });\n    return dict;\n  }\n\n  // check the submitted word against a dictionary. If the word exists,\n  // clear its letters from the screen and add points to the player's score.\n  handleWord(word) {\n    if (this.dict.includes(word) && word.length >= 3 &&\n      this.board.validWord(word))\n      {\n        this.incrementPoints(word);\n        this.board.clearWord(word);\n        this.string = \"\";\n        // set focus on the input field\n      }\n  }\n\n  playLevel() {\n    // actions\n    if (this.beatLevel()) {\n      this.level += 1;\n    }\n  }\n\n  incrementPoints(word) {\n    switch (true) {\n      case (word.length === 3):\n        this.points += 5;\n        break;\n      case (word.length === 4):\n        this.points += 10;\n        break;\n      case (word.length === 5):\n        this.points += 15;\n        break;\n      case (word.length === 6):\n        this.points += 25;\n        break;\n      case (word.length === 7):\n        this.points += 35;\n        break;\n      case (word.length === 8):\n        this.points += 45;\n        break;\n      case (word.length === 9):\n        this.points += 60;\n        break;\n      case (word.length >= 10):\n        this.points += 70;\n        break;\n    }\n  }\n\n  // returns true if the user has beaten the level\n  beatLevel() {\n    switch (this.level) {\n      case 1:\n        if (this.points === 100) {\n          return true;\n        } else {\n          return false;\n        }\n      case 2:\n        if (this.points === 120) {\n          return true;\n        } else {\n          return false;\n        }\n      case 3:\n        if (this.points === 170) {\n          return true;\n        } else {\n          return false;\n        }\n      case 4:\n        if (this.points === 200) {\n          return true;\n        } else {\n          return false;\n        }\n    }\n  }\n\n}\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 0\n// module chunks = 0","class Tile {\n  constructor() {\n    this.letter = this.chooseLetter();\n  }\n\n  chooseLetter() {\n    const letterFrequencies = [['E','T','A','O','I','N','S','R','H','D',\n    'L','U','C','M','F','Y','W','G','P','B','V','K','X','Q','J','Z'],\n  [12.02,21.12,29.24,36.92,44.23,51.18,57.46,63.48,69.4,73.72,77.7,80.58,\n    83.29,5.9,88.2,90.31,92.4,94.43,96.25,97.74,98.85,99.54,99.71,99.82,\n    99.92,100]];\n\n    let randomNum = (Math.random() * 100).toFixed(2);\n    for (let i = 0; i < letterFrequencies[1].length; i++) {\n      if (randomNum >= letterFrequencies[1][i]) {\n        return letterFrequencies[0][i];\n      }\n    }\n  }\n\n}\n\nmodule.exports = Tile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/tile.js\n// module id = 1\n// module chunks = 0","const View = require('./game-view.js');\nconst Game = require('./game.js');\n\n$(function () {\n  const rootEl = ('.word-game');\n  // const game = new Game();\n  new View(rootEl);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/main.js\n// module id = 2\n// module chunks = 0","const Game = require('./game.js');\n\nclass View {\n\n  constructor($el) {\n    this.game = new Game();\n    this.$el = $el;\n    this.string = \"\";\n\n    this.setupBoard();\n\n    this.intervalId = window.setInterval(\n      this.step.bind(this),\n      View.STEP_MILLIS\n    );\n\n    $(window).on(\"keydown\", this.handleEnter.bind(this));\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCharacter = this.handleCharacter.bind(this);\n\n  }\n\n  handleEnter(e) {\n    if (e.keyCode == 13) {\n      this.handleSubmit(e);\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.board.validWord(this.string)) {\n      this.game.handleWord();\n    }\n  }\n\n  handleCharacter(e) {\n    e.preventDefault();\n    this.string = e.target.value;\n    // check if the new character is in the list of letters on the screen.\n    // If it is, turn that tile green. If it's not, give an alert/indicator\n    let lastChar = this.string.charAt(this.string.length-1);\n    this.board.handleLetter(lastChar);\n  }\n\n  setupBoard() {\n    const $ul = $(\"<ul>\");\n    // $ul.addClass(\"all-tiles\");\n\n    for (let rowIdx = 0; rowIdx < 3; rowIdx++) {\n      for (let colIdx = 0; colIdx < 10; colIdx++) {\n        let $li = $(\"<li>\");\n        $li.data(\"pos\", [rowIdx, colIdx]);\n        if (this.game.board.grid[rowIdx][colIdx]) {\n          $li.data(\"letter\", this.game.board.grid[rowIdx][colIdx].letter);\n          $li.addClass(\"tile\");\n        }\n\n        $ul.append($li);\n      }\n    }\n\n    $(this.el).append($ul);\n    // this.$el.append($ul);\n  }\n\n  render() {\n\n    this.$el.html(this.game.board.render());\n\n  }\n\n  step() {\n    // if still time in the level\n    this.game.board.incrementTiles();\n    this.render();\n  }\n\n}\n\nView.STEP_MILLIS = 100;\n\nmodule.exports = View;\n\n// return (\n//   <form className=\"word-form\" onSubmit={this.handleSubmit}>\n//     <ul>\n//       <li>\n//       <input className=\"string\" value={this.string}\n//         onChange={this.handleCharacter()} />\n//       </li>\n//       <li>\n//       <input type=\"submit\">Submit</input>\n//       </li>\n//     </ul>\n//   </form>\n// );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game-view.js\n// module id = 3\n// module chunks = 0","const Tile = require(\"./tile.js\");\n\nclass Board {\n  constructor() {\n    this.grid = [[null,null,null,null,null,null,null,null,null,null],\n      [null,null,null,null,null,null,null,null,null,null],\n      [null,null,null,null,null,null,null,null,null,null]];\n    this.initializeTiles();\n\n  }\n\n  initializeTiles() {\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = (this.grid[0].length/2)-1; j < this.grid[0].length; j++) {\n        let tile = new Tile();\n        this.grid[i][j] = tile;\n      }\n    }\n  }\n\n  incrementTiles() {\n    let unavailableLetters = [];\n    for (let i = 0; i < this.grid.length; i++) {\n      // if (this.grid[i].letter has class of \"selected\") {\n      // use jquery hasClass() method?\n      //  unavailableLetters.push(this.grid[i].letter);\n      // }\n      this.grid[i].shift();\n      this.grid[i].push(new Tile());\n    }\n    if (unavailableLetters.length > 0) {\n      // give an indication to the player\n    }\n  }\n\n  // updates the tile's class to \"selected\" if the letter exists in the\n  // letters shown on the screen and has not yet been selected. Returns\n  // an error if the letter can't be found\n  handleLetter(letter) {\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = 0; j < this.grid[0].length; j++) {\n        if (this.grid[i][j].letter === letter ) { // NOTE: AND class != selected. How to do this?\n          // change the tile's class to selected, then break (needed?)\n        }\n      }\n    }\n    // give an error\n  }\n\n  // returns true if all the letters for the word are on the screen\n  validWord(word) {\n    let allLetters = [];\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = 0; j < this.grid[0].length; j++) {\n        allLetters.push(this.grid[i][j].letter);\n      }\n    }\n    for (let i = 0; i < word.length; i++) {\n      if (allLetters.indexOf(word[i]) === -1) {\n        return false;\n      } else {\n        let index = allLetters.indexOf(word[i]);\n        allLetters.splice(index, 1);\n      }\n    }\n    return true;\n  }\n\n  // clear the letters of the word from the list of letters on the screen\n  clearWord(word) {\n    let tempWord = word;\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = 0; j < this.grid[0].length; j++) {\n        if (this.grid[i][j].letter === tempWord[0]) {\n          this.grid[i][j] = null;\n          tempWord = tempWord.slice(1);\n        }\n      }\n    }\n  }\n\n}\n\n\nmodule.exports = Board;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/board.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}